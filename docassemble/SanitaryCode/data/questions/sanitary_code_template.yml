#This is an interview which can help a tenant complete a petition to enforce sanitary code which asks a court to force a landlord to make repairs to the tenants apartment/residence which does not meet the state enforced sanitary code. This is for the state of Massachusetts
---
include:
  - docassemble.MAVirtualCourt:basic-questions.yml
---
comment: |
  The metadata section controls the tab title and saved interview title. You can delete this section if you include this YAML file in another YAML file.
metadata:
  title: |
    Petition to Enforce Sanitary Code
  short title: |
    Sanitary code
---
comment: |
  This section is used by MAVirtualCourts to control how some of the questions work.
mandatory: True
code: |
  interview_metadata # make sure we initialize the object
  if not defined("interview_metadata['sanitary_code_template']"):
    interview_metadata.initializeObject('sanitary_code_template')
  interview_metadata['sanitary_code_template'].update({
    'title': 'Petition to Enforce Sanitary Code',
    'short title': 'Sanitary code',
    'description': 'This is an interview to help a tenant fill out a petition to enforce sanitary code to get a landlord to make repairs in their apartments.',
    'original_form': '',
    'allowed courts': [
      'Housing Court',
      'Superior Court',
    ],
    'categories': [
      'Housing',
    ],
    'logic block variable': 'sanitary_code_template',
    'attachment block variable': 'sanitary_code_template_attachment',
    'typical role': 'plaintiff',
  })
---
features:
  navigation: True
---
sections:
  - review_sanitary_code_template: Review your answers
---
objects:
  - users: PeopleList.using(ask_number=True, target_number=1)
---
code: |
  other_parties.there_are_any = True
---
id: interview_order_sanitary_code_template
code: |
  # This is a placeholder to control logic flow in this interview

  basic_questions_intro_screen 
  sanitary_code_template_intro
  if not inspection:
    kick_out
  if inspected_already:
    inspector_name
  if inspection_scheduled:
    future_inspector_name
  reassurance_screen
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["sanitary_code_template"]["allowed courts"]
  nav.set_section('review_sanitary_code_template')
  user_role = 'plaintiff'
  str(plaintiffs)
  str(other_parties)
  users[0].address.on_one_line()
  set_progress(27.27)
  users[0]
  #users[1]
  users[0].address.address
  #users[1].address.address
  set_progress(36.36)
  #users[1].address.zip
  users[0].address.state
  #users[1].address.state
  users[0].address.city
  #users[1].address.city
  set_progress(45.45)
  users[0].address.zip
  users[0].phone_number
  users[0].email
  #users[1].phone_number
  #users[1].email
  other_parties[0].address.address
  number_of_apartments
  rent_amount
  petition_explained
  fmv_yesno
  reciever_yesno
  order_yesno
  set_progress(9.09)
  # Set the answer file name.
  set_parts(subtitle=str(users))
  courts[0].address.county
  str(courts[0])
  set_progress(18.18)
  set_progress(54.55)
  signature_date
  # Save (anonymized) interview statistics.
  store_variables_snapshot(data={'zip': users[0].address.zip})
  sanitary_code_template_preview_question # Pre-canned preview screen
  basic_questions_signature_flow
  users[0].signature
  #users[1].signature
  sanitary_code_template = True
---
code: |
  interview_short_title = 'Petition the court to Enforce the State Sanitary Code'
---
comment: |
  This question is used to introduce your interview. Please customize
id: Petition to Enforce Sanitary Code
field: sanitary_code_template_intro
question: |
  Tenant Petition for the Enforcement of the State Sanitary Code Pursuant to G.L c. 111 ยง127C-I
subquestion: |
  Tenants use this petition to ask a judge to:
  
  * order the landlord to make repairs. It is especially useful when you have emergency repairs that need to be fixed quickly.
  * lower your rent to the {fair rental value} of your apartment,  
  * order you to pay the {fair rental value} **to the court** while the landlord makes the repairs, or
  * appoint a {receiver}, or temporary landlord.</br>
  If you are going to ask the judge for a temporary landlord, try to [get help from a lawyer](https://MassLegalHelp.org/find-legal-aid).
  
  ####Important
terms:
 - receiver: |
    A receiver is a person or organization the court appoints to manage a property temporarily because the landlord is irresponsible or impossible to reach. </br></br>
    
    The receiver  enforces the state Sanitary Code. </br></br>
    
    Tenants can use receivership as way to get necessary repairs made and prevent their building from deteriorating.</br></br>
    
    See [Receiverships](https://www.masslegalhelp.org/housing/lt1-chapter-8-receivership).
 - fair rental value: |
     The fair rental value is the value of the apartment with all of its problems.
---
id: filing requirement
question: |
  Important Requirements
subquestion: |
  **Before** you file this petition with the court you need:
  
  * an inspection by a code enforcement agency,  **or**
  * an appointment for an inspection within 24 hours of the day you file your petition.
  
  Has a code enforcement agency already inspected your apartment?
fields:
  - no label: inspected_already
    datatype: yesnoradio
  - 'Have you scheduled an appointment with a code enforcement agency?':  inspection_scheduled
    datatype: yesnoradio
    js show if: |
      val('inspected_already') == false
  - 'Is the appointment within 24 hours of when you plan to file this petition?': inspection_within_24_hours
    datatype: yesnoradio
    show if: 
      variable: inspection_scheduled
      is: True
help: 
  label: What is a code enforcement agency?
  heading: |
   A code enforcement agency is:
  content: |
   Your town or city Board of Health or Inspectional Services Department does the inspection. Contact your city or towns Board of Health to learn how to make a an appointment. 
---
id: reassurance screen
question: | 
  It looks like you have met the requirements!
subquestion: |
  On the following screens please enter information about yourself, your landlord and your apartment. 
continue button field: reassurance_screen
---
code: |    
  if not inspected_already:
    if inspection_scheduled:
      inspection = inspection_within_24_hours
    else:
      inspection = False
  else:
    inspection = True
---
id: no inspection kickout
question: |
  You do not meet the requirements necessary to complete this form
subquestion: |
  In order to file the Petition properly you need to have an inspection report or an inspection scheduled at least 24 hours before the filing of this petition.

  Contact your town offices to find out how to schedule an inspection.
event: kick_out
buttons:
  - Exit: exit
---
id: Review your form before you sign it
continue button field: sanitary_code_template_preview_question
question: |
  Review your form before you sign it
subquestion: |
  Here is a preview of the form you'll sign on the next page. 
  
   ${ pdf_concatenate(sanitary_code_template_attachment['preview'], filename='sanitary_code_template.pdf')}
---
id: explaining the petition
question: |
  What this form does
subquestion: |
  This form will automatically ask the judge for:
  
  - Confirmation that there will be a trial (this will be delivered to your landlord to let them know when the trial will be).
  
  - An order for any remedy that the judge thinks is suitable, such as making repairs to the issues included on your inspection report.
  
  On the next screens you will be asked if there are any **other** remedies that you wish to ask the judge for. 
  
  **If you are only asking  the judge to get your landlord to make repairs,  answer "No" to all of the next questions.**
continue button field: petition_explained
---
id: apartments number
question: |
  Tell the judge about ${ users[0].address.on_one_line() }:
fields:
  - 'Number of apartments in the building': number_of_apartments
    datatype: number
    min: 0
  - 'Number of those apartments which are occupied': occupied_apartments
    datatype: number
    min: 0
#    max: 
---
id: rent
question: |
  Rent
fields:
  - 'How much rent do you pay?': rent_amount
    datatype: currency
    min: 0
  - 'How often you pay rent?': rent_rate
    choices:
      - Daily
      - Weekly
      - Every two weeks
      - Monthly
      - Every 2 months
      - Every 3 months
    maxlength: 19
---
id: inspections
question: |
  Inspections by an official from a code enforcement agency
subquestion: |
  State the name of the code enforcement agency which did an insection of your residence.
fields:
  - 'Name of the code enforcement agency ': inspector_name
    maxlength: 43
---
id: future inspections
question: |
  Future Inspection
subquestion: |
  **In order to file the Petition properly you need to have an inspection report or an inspection scheduled at least 24 hours before the filing of this petition.**
fields:
  - 'Name of the code enforcement agency': future_inspector_name
    maxlength: 36
  - 'Date of future inspection': future_inspection_date
    datatype: date
---
id: Order details
question: |
  Do you want to ask the judge for anything else?
subquestion: |
 As well as the **Order of Notice** and **order to make repairs**, you can ask the judge to give you a {restraining order}, {injunction} or other remedy against your landlord

  What do you need the judge to make your landlord to do?
  
  **If you are seeking a restraining order or injunction say so in your statement**
fields:
  - 'Do you need for the judge to give you something else?': order_yesno
    datatype: yesnoradio
  - 'What do you need the judge to make your landlord do': order_description
    input type: area
    show if: order_yesno
    maxlength: 396
terms:
  - restraining order: |
      A restraining order or protective order is an order used by a court to protect a person, object, business, company, state, country, establishment, or entity from another person who has been violent or abusive to another.
  - injunction: |
      An injunction asks the court to prevent someone from doing something, in your case it may be asking the court to stop an eviction process from the landlord. 
---
id: FMV
question: |
  Fair Market Value calculation
subquestion: |
  You can ask the judge to calculate what the fair market value is to rent your apartment without the proper repairs and you can ask the judge to allow you to pay that amount as rent. 
  
  Do you want to ask the judge to do this calculation and to allow you to pay that new amount?
fields:
  - 'Ask the judge to do the calculation': fmv_yesno
    datatype: yesnoradio
  - 'Ask the judge to allow the rent to be that new amount': fmv_authorization_yesno
    show if: fmv_yesno
    datatype: yesnoradio
---
id: receiver yesno
question: |
  Do you want to ask the judge to choose a receiver?
subquestion: |
  A reciever will be a temporary landlord that would be appointed by the court and allowed to make the proper repairs. When the repairs are done, the reciever will no longer be the temporary landlord. 
yesno: reciever_yesno
---
progress: 100
mandatory: True
id: Your form is ready to download and file
question: |
  Your form is ready to download and file
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  Below is a preview of your form.
  
  ${pdf_concatenate(sanitary_code_template_attachment['final'], filename='sanitary_code_template.pdf') }
need: sanitary_code_template
attachment code: sanitary_code_template_attachment['final']
---
objects:
  - sanitary_code_template_attachment: DADict
---
attachment:
    variable name: sanitary_code_template_attachment[i]
    name: Sanitary code
    filename: Sanitary_code
    skip undefined: True
    pdf template file: sanitary_code_template.pdf
    fields: 
      - "court_county": ${ courts[0].address.county }
      - "court_name": ${ str(courts[0]) }
      - "docket_number": ${ docket_numbers }
      - "plaintiffs": ${ str(plaintiffs) }
      - "defendants": ${ str(other_parties) }
      - "plaintiff_address_on_one_line": ${ users[0].address.on_one_line() }
      # If it is a signature, test which file version we're expecting. leave it empty unless it's the final attachment version
      - "plaintiff2_signature": ${ users[1].signature if i == 'final' else '' }
      # If it is a signature, test which file version we're expecting. leave it empty unless it's the final attachment version
      - "plaintiff1_signature": ${ users[0].signature if i == 'final' else '' }
      - "plaintiff1": ${ users[0] }
      - "plaintiff2": ${ users[1] }
      - "plaintiff1_address_street": ${ users[0].address.address }
      - "plaintiff2_address_street": ${ users[1].address.address }
      - "plaintiff2_address_zip": ${ users[1].address.zip }
      - "plaintiff1_address_state": ${ users[0].address.state }
      - "plaintiff2_address_state": ${ users[1].address.state }
      - "plaintiff1_address_city": ${ users[0].address.city }
      - "plaintiff2_address_city": ${ users[1].address.city }
      - "plaintiff1_address_zip": ${ users[0].address.zip }
      - "plaintiff2_phone": ${ users[1].phone_number }
      - "plaintiff1_phone": ${ users[0].phone_numbers() }
      - "plaintiff1_email": ${ users[0].email }
      - "plaintiff2_email": ${ users[1].email }
      - "signature_date": ${ signature_date }
      - "defendant_address": ${ other_parties[0].address.on_one_line() }
      - "number_of_apartments": ${ number_of_apartments }
      - "occupied_apartments": ${ occupied_apartments }
      - "rent_amount": ${ currency(rent_amount ) }
      - "rent_rate": ${ rent_rate }
      - "inspected_already": ${ inspected_already }
      - "inspection_scheduled": ${ inspection_scheduled }
      - "inspector_name": ${ inspector_name }
      - "future_inspector_name": ${ future_inspector_name }
      - "future_inspection_date": ${ future_inspection_date }
      - "order_yesno": ${ order_yesno }
      - "order_description": ${ order_description }
      - "fmv_yesno": ${ fmv_yesno }
      - "fmv_authorization_yesno": ${ fmv_authorization_yesno }
      - "reciever_yesno": ${ reciever_yesno }
---
id: sanitary_code_template review screen
event: review_sanitary_code_template
question: |
  Placeholder Review Screen
subquestion: |
  Edit your answers below
review: 
  - Edit: other_parties[0].address
    button: |
      Defendant address:
      ${ other_parties[0].address }
  - Edit: number_of_apartments
    button: |
      Number of apartments:
      ${ number_of_apartments }
  - Edit: occupied_apartments
    button: |
      Occupied apartments:
      ${ occupied_apartments }
  - Edit: rent_amount
    button: |
      Rent amount:
      ${ currency(rent_amount) }
  - Edit: rent_rate
    button: |
      Rent rate:
      ${ rent_rate }
  - Edit: inspector_name
    button: |
      Inspector name:
      ${ inspector_name }
  - Edit: future_inspector_name
    button: |
      Future inspector name:
      ${ future_inspector_name }
  - Edit: future_inspection_date
    button: |
      Date of future inspection:
      ${ future_inspection_date.format() }
  - Edit: order_yesno
    button: |
      Order yesno:
      ${ word(yesno(order_yesno)) }
  - Edit: order_description
    button: |
      Order description:
      > ${ single_paragraph(order_description) }
  - Edit: fmv_yesno
    button: |
      Fmv yesno:
      ${ word(yesno(fmv_yesno)) }
  - Edit: fmv_authorization_yesno
    button: |
      Fmv authorization yesno:
      ${ word(yesno(fmv_authorization_yesno)) }
  - Edit: reciever_yesno
    button: |
      Reciever yesno:
      ${ word(yesno(reciever_yesno)) }
  - Edit: courts[0].address.county
    button: |
      courts[0].address.county:
      ${ courts[0].address.county }
  - Edit: courts[0]
    button: |
      courts[0]:
      ${ courts[0] }
  - Edit: docket_numbers
    button: |
      docket_numbers:
      ${ docket_numbers }
  - Edit: plaintiffs
    button: |
      plaintiffs:
      ${ plaintiffs }
  - Edit: other_parties
    button: |
      Defendants:
      ${ other_parties }
  - Edit: users[0].address.address
    button: |
      users[0].address.address:
      ${ users[0].address.address }
  - Edit: users[1].signature
    button: |
      users[1].signature:
      ${ users[1].signature }
  - Edit: users[0].signature
    button: |
      users[0].signature:
      ${ users[0].signature }
  - Edit: users[0]
    button: |
      users[0]:
      ${ users[0] }
  - Edit: users[1]
    button: |
      users[1]:
      ${ users[1] }
  - Edit: users[1].address.address
    button: |
      users[1].address.address:
      ${ users[1].address.address }
  - Edit: users[1].address.zip
    button: |
      users[1].address.zip:
      ${ users[1].address.zip }
  - Edit: users[0].address.state
    button: |
      users[0].address.state:
      ${ users[0].address.state }
  - Edit: users[1].address.state
    button: |
      users[1].address.state:
      ${ users[1].address.state }
  - Edit: users[0].address.city
    button: |
      users[0].address.city:
      ${ users[0].address.city }
  - Edit: users[1].address.city
    button: |
      users[1].address.city:
      ${ users[1].address.city }
  - Edit: users[0].address.zip
    button: |
      users[0].address.zip:
      ${ users[0].address.zip }
  - Edit: users[1].phone_number
    button: |
      users[1].phone_number:
      ${ users[1].phone_number }
  - Edit: users[0].phone_number
    button: |
      users[0].phone_number:
      ${ users[0].phone_number }
  - Edit: users[0].email
    button: |
      users[0].email:
      ${ users[0].email }
  - Edit: users[1].email
    button: |
      users[1].email:
      ${ users[1].email }
  - Edit: signature_date
    button: |
      signature_date:
      ${ signature_date }
