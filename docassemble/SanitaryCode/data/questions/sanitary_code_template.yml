#This is an interview which can help a tenant complete a petition to enforce sanitary code which asks a court to force a landlord to make repairs to the tenants apartment/residence which does not meet the state enforced sanitary code. This is for the state of Massachusetts
---
include:
  - docassemble.MAVirtualCourt:basic-questions.yml
---
comment: |
  The metadata section controls the tab title and saved interview title. You can delete this section if you include this YAML file in another YAML file.
metadata:
  title: |
    Petition to Enforce Sanitary Code
  short title: |
    Sanitary code
---
comment: |
  This section is used by MAVirtualCourts to control how some of the questions work.
mandatory: True
code: |
  interview_metadata # make sure we initialize the object
  if not defined("interview_metadata['sanitary_code_template']"):
    interview_metadata.initializeObject('sanitary_code_template')
  interview_metadata['sanitary_code_template'].update({
    'title': 'Petition to Enforce Sanitary Code',
    'short title': 'Sanitary code',
    'description': 'This is an interview to help a tenant fill out a petition to enforce sanitary code to get a landlord to make repairs in their apartments.',
    'original_form': '',
    'allowed courts': [
      'Housing Court',
      'Superior Court',
    ],
    'categories': [
      'Housing',
    ],
    'logic block variable': 'sanitary_code_template',
    'attachment block variable': 'sanitary_code_template_attachment',
    'typical role': 'plaintiff',
  })
---
features:
  navigation: True
---
sections:
  - review_sanitary_code_template: Review your answers
---
objects:
  - users: PeopleList.using(ask_number=True, target_number=1)
---
id: interview_order_sanitary_code_template
code: |
  # This is a placeholder to control logic flow in this interview

  basic_questions_intro_screen 
  if not sanitary_code_template_intro:
    kick_out
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["sanitary_code_template"]["allowed courts"]
  nav.set_section('review_sanitary_code_template')
  user_role = 'plaintiff'
  str(plaintiffs)
  str(other_parties)
  users[0].address.on_one_line()
  set_progress(27.27)
  users[0]
  #users[1]
  users[0].address.address
  #users[1].address.address
  set_progress(36.36)
  #users[1].address.zip
  users[0].address.state
  #users[1].address.state
  users[0].address.city
  #users[1].address.city
  set_progress(45.45)
  users[0].address.zip
  users[0].phone_number
  users[0].email
  #users[1].phone_number
  #users[1].email
  other_parties[0].address.address
  number_of_apartments
  rent_amount
  if not inspection_yesno:
    future_inspection_yesno
    if not future_inspection_yesno:
      kick_out
  petition_explained
  fmv_yesno
  reciever_yesno
  order_yesno
  set_progress(9.09)
  # Set the answer file name.
  set_parts(subtitle=str(users))
  courts[0].address.county
  str(courts[0])
  set_progress(18.18)
  set_progress(54.55)
  signature_date
  # Save (anonymized) interview statistics.
  store_variables_snapshot(data={'zip': users[0].address.zip})
  sanitary_code_template_preview_question # Pre-canned preview screen
  basic_questions_signature_flow
  users[0].signature
  #users[1].signature
  sanitary_code_template = True
---
code: |
  interview_short_title = 'Petition the court to Enforce the State Sanitary Code'
---
comment: |
  This question is used to introduce your interview. Please customize
id: Petition to Enforce Sanitary Code
question: |
  Tenant petition for the enforcement of the state sanitary code purusant to G.L c. 111 ยง127C-I
subquestion: |
  As a tenant, you can use this form to quickly ask the judge to:
  
  * force your landlord to make repairs, especially emergency repairs.
  * lower your rent to the *fair rental value*, which is the amount your landlord could reasonably expect to get in rent.
  * allow you to pay your rent to the court while your landlord makes the repairs.
  * appoint a *receiver* or temporary landlord.
  
  **In order for you to be successful, you need to have already had an inspection by a code enforcement agency OR have an inspection booked within 24 hours of submitting  this form**

fields:
  - I have had inspection: has_inspection_complete
    datatype: yesnoradio
  - I have booked an inspection: sanitary_code_template_intro
    datatype: yesnoradio
    show if: 
      variable: has_inspection_complete
      is: False
---
id: no inspection kickout
question: |
  You do not meet the requirements necessary to complete this form
subquestion: |
  In order to file the Petition properly you need to have an inspection report or an inspection scheduled at least 24 hours before the filing of this petition.

  Contact your town offices to find out how to schedule an inspection.
event: kick_out
buttons:
  - Exit: exit
---
id: Review your form before you sign it
continue button field: sanitary_code_template_preview_question
question: |
  Review your form before you sign it
subquestion: |
  Here is a preview of the form you'll sign on the next page. 
  
   ${ pdf_concatenate(sanitary_code_template_attachment['preview'], filename='sanitary_code_template.pdf')}
---
id: explaining the petition
question: |
  What this form will do
subquestion: |
  This form will automatically ask the court for:
  
  - An Order of Notice, which is a notice of the trial that you will schedule with the court to be served to your landlord.
  
  - An order to grant any relief that they deem to be just and proper, such as making repairs to the issues indicated on your inspection report.
  
  On the following screens you will be asked if there are any **other** orders or relief that you wish to ask from the court. 
  
  **If you are only asking that the court orders the landlord to make repairs then answer "No" to all of the following questions.**
continue button field: petition_explained
---
id: apartments number
question: |
  Enter the following information about ${ users[0].address.on_one_line() }:
fields:
  - 'Number of apartments in the building': number_of_apartments
    datatype: number
  - 'Number of those apartments which are occupied': occupied_apartments
    datatype: number
---
id: rent
question: |
  Rent
subquestion: |
  Enter the amount of rent you pay and the rate at which you pay that rent (i.e. per week, per month, etc.)
fields:
  - 'Amount that you pay in rent': rent_amount
    datatype: currency
    min: 0
  - 'Rate at which you pay that amount': rent_rate
    choices:
      - Daily
      - Weekly
      - Bi-weekly
      - Monthly
      - Every 2 months
      - Every 3 months
    maxlength: 19
---
id: inspections
question: |
  Inspections by an official from a code enforcement agency
subquestion: |
  Has an inspection from an official code enforcement agency already taken place?
fields:
  - 'Inspection already taken place?': inspection_yesno
    datatype: yesnoradio
  - 'Name of the code enforcement agency ': inspector_name
    show if: inspection_yesno
    maxlength: 43
---
id: future inspections
question: |
  Do you have any future inspections with an official from a code enforcement agency scheduled?
subquestion: |
  **In order to file the Petition properly you need to have an inspection report or an inspection scheduled at least 24 hours before the filing of this petition.**
fields:
  - 'Future inspection?': future_inspection_yesno
    datatype: yesnoradio
  - 'Name of the code enforcement agency': future_inspector_name
    show if: future_inspection_yesno
    maxlength: 36
  - 'Date of future inspection': future_inspection_date
    show if: future_inspection_yesno
    datatype: date
---
id: Order details
question: |
  Requesting any additional orders or relief from the court
subquestion: |
  Are you requesting that **along with the Order of Notice and order to make repairs** that the court issues a restraining order, injunction or other relief against the landlord?

  If so, what do you need the court to order the landlord to do?
fields:
  - 'Do you need for the court to issue an additional order?': order_yesno
    datatype: yesnoradio
  - 'What do you need the court to order the landlord to do': order_description
    input type: area
    show if: order_yesno
    maxlength: 396
---
id: FMV
question: |
  Fair Market Value determination
subquestion: |
  You can ask the court to make a fair market value determination of the apartment without the proper repairs and you can ask the court to authorizes the tenants to pay rent in the amount of that fair market value determination. 
  
  Do you wish for the court to make an FMV and to authorize payment in that amount?
fields:
  - 'Ask the court to make an FMV determination': fmv_yesno
    datatype: yesnoradio
  - 'Ask the court to authorize the rent payment in that FMV value': fmv_authorization_yesno
    show if: fmv_yesno
    datatype: yesnoradio
---
id: receiver yesno
question: |
  Are you requesting that the court appoints a reciever?
subquestion: |
  A reciever will be a temporary landlord that would be appointed by the court and authorized to make the proper repairs. When the repairs are done the reciever will no longer have that responsibility. 
yesno: reciever_yesno
---
progress: 100
mandatory: True
id: Your form is ready to download and file
question: |
  Your form is ready to download and file
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  Below is a preview of your form.
  
  ${pdf_concatenate(sanitary_code_template_attachment['final'], filename='sanitary_code_template.pdf') }
need: sanitary_code_template
attachment code: sanitary_code_template_attachment['final']
---
objects:
  - sanitary_code_template_attachment: DADict
---
attachment:
    variable name: sanitary_code_template_attachment[i]
    name: Sanitary code
    filename: Sanitary_code
    skip undefined: True
    pdf template file: sanitary_code_template.pdf
    fields: 
      - "court_county": ${ courts[0].address.county }
      - "court_name": ${ str(courts[0]) }
      - "docket_number": ${ docket_numbers }
      - "plaintiffs": ${ str(plaintiffs) }
      - "defendants": ${ str(other_parties) }
      - "plaintiff_address_on_one_line": ${ users[0].address.on_one_line() }
      # If it is a signature, test which file version we're expecting. leave it empty unless it's the final attachment version
      - "plaintiff2_signature": ${ users[1].signature if i == 'final' else '' }
      # If it is a signature, test which file version we're expecting. leave it empty unless it's the final attachment version
      - "plaintiff1_signature": ${ users[0].signature if i == 'final' else '' }
      - "plaintiff1": ${ users[0] }
      - "plaintiff2": ${ users[1] }
      - "plaintiff1_address_street": ${ users[0].address.address }
      - "plaintiff2_address_street": ${ users[1].address.address }
      - "plaintiff2_address_zip": ${ users[1].address.zip }
      - "plaintiff1_address_state": ${ users[0].address.state }
      - "plaintiff2_address_state": ${ users[1].address.state }
      - "plaintiff1_address_city": ${ users[0].address.city }
      - "plaintiff2_address_city": ${ users[1].address.city }
      - "plaintiff1_address_zip": ${ users[0].address.zip }
      - "plaintiff2_phone": ${ users[1].phone_number }
      - "plaintiff1_phone": ${ users[0].phone_numbers() }
      - "plaintiff1_email": ${ users[0].email }
      - "plaintiff2_email": ${ users[1].email }
      - "signature_date": ${ signature_date }
      - "defendant_address": ${ other_parties[0].address.on_one_line() }
      - "number_of_apartments": ${ number_of_apartments }
      - "occupied_apartments": ${ occupied_apartments }
      - "rent_amount": ${ currency(rent_amount ) }
      - "rent_rate": ${ rent_rate }
      - "inspector_name": ${ inspector_name }
      - "inspection_yesno": ${ inspection_yesno }
      - "future_inspection_yesno": ${ future_inspection_yesno }
      - "future_inspector_name": ${ future_inspector_name }
      - "future_inspection_date": ${ future_inspection_date }
      - "order_yesno": ${ order_yesno }
      - "order_description": ${ order_description }
      - "fmv_yesno": ${ fmv_yesno }
      - "fmv_authorization_yesno": ${ fmv_authorization_yesno }
      - "reciever_yesno": ${ reciever_yesno }
---
id: sanitary_code_template review screen
event: review_sanitary_code_template
question: |
  Placeholder Review Screen
subquestion: |
  Edit your answers below
review: 
  - Edit: other_parties[0].address
    button: |
      Defendant address:
      ${ other_parties[0].address }
  - Edit: number_of_apartments
    button: |
      Number of apartments:
      ${ number_of_apartments }
  - Edit: occupied_apartments
    button: |
      Occupied apartments:
      ${ occupied_apartments }
  - Edit: rent_amount
    button: |
      Rent amount:
      ${ currency(rent_amount) }
  - Edit: rent_rate
    button: |
      Rent rate:
      ${ rent_rate }
  - Edit: inspector_name
    button: |
      Inspector name:
      ${ inspector_name }
  - Edit: inspection_yesno
    button: |
      Inspection yesno:
      ${ word(yesno(inspection_yesno)) }
  - Edit: future_inspection_yesno
    button: |
      Future inspection yesno:
      ${ word(yesno(future_inspection_yesno)) }
  - Edit: future_inspector_name
    button: |
      Future inspector name:
      ${ future_inspector_name }
  - Edit: future_inspection_date
    button: |
      Date of future inspection:
      ${ future_inspection_date.format() }
  - Edit: order_yesno
    button: |
      Order yesno:
      ${ word(yesno(order_yesno)) }
  - Edit: order_description
    button: |
      Order description:
      > ${ single_paragraph(order_description) }
  - Edit: fmv_yesno
    button: |
      Fmv yesno:
      ${ word(yesno(fmv_yesno)) }
  - Edit: fmv_authorization_yesno
    button: |
      Fmv authorization yesno:
      ${ word(yesno(fmv_authorization_yesno)) }
  - Edit: reciever_yesno
    button: |
      Reciever yesno:
      ${ word(yesno(reciever_yesno)) }
  - Edit: courts[0].address.county
    button: |
      courts[0].address.county:
      ${ courts[0].address.county }
  - Edit: courts[0]
    button: |
      courts[0]:
      ${ courts[0] }
  - Edit: docket_numbers
    button: |
      docket_numbers:
      ${ docket_numbers }
  - Edit: plaintiffs
    button: |
      plaintiffs:
      ${ plaintiffs }
  - Edit: other_parties
    button: |
      Defendants:
      ${ other_parties }
  - Edit: users[0].address.address
    button: |
      users[0].address.address:
      ${ users[0].address.address }
  - Edit: users[1].signature
    button: |
      users[1].signature:
      ${ users[1].signature }
  - Edit: users[0].signature
    button: |
      users[0].signature:
      ${ users[0].signature }
  - Edit: users[0]
    button: |
      users[0]:
      ${ users[0] }
  - Edit: users[1]
    button: |
      users[1]:
      ${ users[1] }
  - Edit: users[1].address.address
    button: |
      users[1].address.address:
      ${ users[1].address.address }
  - Edit: users[1].address.zip
    button: |
      users[1].address.zip:
      ${ users[1].address.zip }
  - Edit: users[0].address.state
    button: |
      users[0].address.state:
      ${ users[0].address.state }
  - Edit: users[1].address.state
    button: |
      users[1].address.state:
      ${ users[1].address.state }
  - Edit: users[0].address.city
    button: |
      users[0].address.city:
      ${ users[0].address.city }
  - Edit: users[1].address.city
    button: |
      users[1].address.city:
      ${ users[1].address.city }
  - Edit: users[0].address.zip
    button: |
      users[0].address.zip:
      ${ users[0].address.zip }
  - Edit: users[1].phone_number
    button: |
      users[1].phone_number:
      ${ users[1].phone_number }
  - Edit: users[0].phone_number
    button: |
      users[0].phone_number:
      ${ users[0].phone_number }
  - Edit: users[0].email
    button: |
      users[0].email:
      ${ users[0].email }
  - Edit: users[1].email
    button: |
      users[1].email:
      ${ users[1].email }
  - Edit: signature_date
    button: |
      signature_date:
      ${ signature_date }
